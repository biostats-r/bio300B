---
title: "Datalab 11"
author: "Richard Telford"
date: today
format: html
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(survival)
library(ggfortify) # for autoplot

theme_set(theme_bw())
```

You have done an experiment where you have tested how the castrating bacterium
_Pasteuria ramosa_ affects survival of its crustacean host Daphnia magna.

Download the data from https://raw.githubusercontent.com/biostats-r/bio300B/master/data/daphnia_survival.csv
and import them.

```{r}
#| label: import
#| message: false

daphnia <- read_delim(file = here::here("data/daphnia_survival.csv"), 
                      skip = 9) |> 
  janitor::clean_names()

# make uninfected the reference group
daphnia <- daphnia |>
  mutate(group = factor(group, levels = c("Uninfected", "Infected")))
```


Using the example in the lecture as a guide

- Create a survival plot

```{r}
#| label: surv-plot
daphnia_fit <- survfit(Surv(day_of_death, dead) ~ group, data = daphnia)

daphnia_fit

autoplot(daphnia_fit) + 
  labs(x = "Day", y = "Percent survival")

```


- Test the hypothesis:
H0: Daphnia magna infected by Pasteuria ramosa has the same survival as uninfected individuals.


Could do a non-parametric test. Fewer assumptions than parametric tests, but less informative

```{r}
#logrank test
survdiff(Surv(day_of_death, dead) ~ group, data = daphnia)
```
- strong evidence of a difference. 
- Cannot use this function to make predictions. Could get median survival time from `survfit` output above


Or we can use a parametric test - `survreg()`. This requires us to choose a distribution. weibull and loglogistic are popular distributions

```{r}
daphnia_weibull <- survreg(Surv(day_of_death, dead) ~ group,
          dist = 'weibull',
          data = daphnia)

daphnia_loglogistic <- update(daphnia_weibull,
          dist = 'loglogistic',
          data = daphnia)

# model comparison with AIC
AIC(daphnia_weibull, daphnia_loglogistic) 
# Weibull model has lower AIC
```
```{r}
daphnia_weibull

anova(daphnia_weibull)

exp(coef(daphnia_weibull)) # intercept give mean time for uninfected group, groupinfected gives the ratio of the survival times. Infected live ~ half as long
```


- Use the model to calculate the expected mean age at death for the two groups (infected and uninfected)

```{r}
# Can calculate from coefficients or use predict

nd <- tibble(group = c("Infected", "Uninfected"))
predict(daphnia_weibull, newdata = nd)
#or use 
broom::augment(daphnia_loglogistic, newdata = nd)
# results sensitive to distribution assumed
```

There is also the semi-parametric Cox proportional Hazard model


```{r}
#| label: cox
daphnia_cox <- coxph(Surv(day_of_death, dead) ~ group, data = daphnia)
daphnia_cox


```

